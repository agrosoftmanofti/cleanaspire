@inject OfflineSyncService OfflineSyncService

<div class="d-flex justify-center align-center flex-row gap-2">
    @if (OfflineSyncService.CurrentStatus == SyncStatus.Idle || OfflineSyncService.CurrentStatus == SyncStatus.Completed)
    {
        <MudIconButton Icon="@Icons.Material.Outlined.MoreVert" Color="Color.Inherit" />
    }
    else
    {
        <MudText Typo="Typo.caption">@OfflineSyncService.StatusMessage</MudText>
        <MudIcon>
            <svg width="24" height="24" viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg" version="1.1" xmlns:xlink="http://www.w3.org/1999/xlink" transform="matrix(-1.8369701987210297e-16,-1,1,-1.8369701987210297e-16,0,0)">
                <!-- 第1个圆点 (蓝色) -->
                <circle cx="50" cy="20" r="7" fill="#3498db">
                    <animateTransform attributeType="XML" attributeName="transform" type="rotate" from="0 50 50" to="360 50 50" dur="1.5s" repeatCount="indefinite"></animateTransform>
                </circle>

                <!-- 第2个圆点 (红色) -->
                <circle cx="80" cy="50" r="7" fill="#e74c3c">
                    <animateTransform attributeType="XML" attributeName="transform" type="rotate" from="0 50 50" to="360 50 50" dur="1.5s" begin="0.2s" repeatCount="indefinite"></animateTransform>
                </circle>

                <!-- 第3个圆点 (黄色) -->
                <circle cx="50" cy="80" r="7" fill="#f1c40f">
                    <animateTransform attributeType="XML" attributeName="transform" type="rotate" from="0 50 50" to="360 50 50" dur="1.5s" begin="0.4s" repeatCount="indefinite"></animateTransform>
                </circle>

                <!-- 第4个圆点 (绿色) -->
                <circle cx="20" cy="50" r="7" fill="#2ecc71">
                    <animateTransform attributeType="XML" attributeName="transform" type="rotate" from="0 50 50" to="360 50 50" dur="1.5s" begin="0.6s" repeatCount="indefinite"></animateTransform>
                </circle>
            </svg>
        </MudIcon>
    }
</div>

@code {
    protected override void OnInitialized()
    {
        OfflineSyncService.OnSyncStateChanged += StateHasChanged;
    }

    public void Dispose()
    {
        OfflineSyncService.OnSyncStateChanged -= StateHasChanged;
    }

    
}
